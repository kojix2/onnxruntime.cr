crystal_doc_search_index_callback({"repository_name":"onnxruntime","body":"# onnxruntime.cr\n\n[![build](https://github.com/kojix2/onnxruntime.cr/actions/workflows/test.yml/badge.svg)](https://github.com/kojix2/onnxruntime.cr/actions/workflows/test.yml)\n\n[ONNX Runtime](https://github.com/Microsoft/onnxruntime) bindings for Crystal\n\n## Installation\n\n1. Install ONNX Runtime\n\n   Download and install the ONNX Runtime from the [official releases](https://github.com/microsoft/onnxruntime/releases).\n\n   For Linux:\n   ```bash\n   # Example for Linux\n   wget https://github.com/microsoft/onnxruntime/releases/download/v1.21.0/onnxruntime-linux-x64-1.21.0.tgz\n   tar -xzf onnxruntime-linux-x64-1.21.0.tgz\n   export ONNXRUNTIMEDIR=/path/to/onnxruntime-linux-x64-1.21.0\n   ```\n\n   For macOS:\n   ```bash\n   # Example for macOS\n   wget https://github.com/microsoft/onnxruntime/releases/download/v1.21.0/onnxruntime-osx-x86_64-1.21.0.tgz\n   tar -xzf onnxruntime-osx-x86_64-1.21.0.tgz\n   export ONNXRUNTIMEDIR=/path/to/onnxruntime-osx-x86_64-1.21.0\n   ```\n\n   For Windows:\n   ```powershell\n   # Example for Windows\n   # Download from https://github.com/microsoft/onnxruntime/releases\n   # Extract and set environment variable\n   $env:ONNXRUNTIMEDIR = \"C:\\path\\to\\onnxruntime-win-x64-1.21.0\"\n   ```\n\n2. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     onnxruntime:\n       github: kojix2/onnxruntime.cr\n   ```\n\n3. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"onnxruntime\"\n\n# Load a model\nmodel = OnnxRuntime::Model.new(\"path/to/model.onnx\")\n\n# Print model inputs and outputs\nputs \"Inputs:\"\nmodel.inputs.each do |input|\n  puts \"  #{input[:name]}: #{input[:type]} #{input[:shape]}\"\nend\n\nputs \"Outputs:\"\nmodel.outputs.each do |output|\n  puts \"  #{output[:name]}: #{output[:type]} #{output[:shape]}\"\nend\n\n# Prepare input data\ninput_data = {\n  \"input_name\" => [1.0_f32, 2.0_f32, 3.0_f32]\n}\n\n# Run inference\nresult = model.predict(input_data)\n\n# Process results\nresult.each do |name, data|\n  puts \"#{name}: #{data}\"\nend\n```\n\n### Example with MNIST\n\n```crystal\nrequire \"onnxruntime\"\n\n# Load the MNIST model\nmodel = OnnxRuntime::Model.new(\"mnist.onnx\")\n\n# Create a dummy input (28x28 image with all zeros)\ninput_data = Array(Float32).new(28 * 28, 0.0_f32)\n\n# Run inference\nresult = model.predict({\"Input3\" => input_data})\n\n# Get the output probabilities\nprobabilities = result[\"Plus214_Output_0\"].as(Array(Float32))\n\n# Find the digit with highest probability\npredicted_digit = probabilities.each_with_index.max_by { |prob, _| prob }[1]\nputs \"Predicted digit: #{predicted_digit}\"\n```\n\n## Development\n\nTo generate the C API bindings:\n\n```bash\ncd scripts\ndocker build -t c2ffi .\nwget https://raw.githubusercontent.com/microsoft/onnxruntime/v1.21.0/include/onnxruntime/core/session/onnxruntime_c_api.h\ndocker run --rm -v $(pwd):/data c2ffi onnxruntime_c_api.h > capi.json\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/kojix2/onnxruntime.cr/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n","program":{"html_id":"onnxruntime/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"onnxruntime","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"onnxruntime/OnnxRuntime","path":"OnnxRuntime.html","kind":"module","full_name":"OnnxRuntime","name":"OnnxRuntime","abstract":false,"locations":[{"filename":"src/onnxruntime.cr","line_number":7,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime.cr#L7"},{"filename":"src/onnxruntime/inference_session.cr","line_number":1,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/inference_session.cr#L1"},{"filename":"src/onnxruntime/libonnxruntime.cr","line_number":1,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/libonnxruntime.cr#L1"},{"filename":"src/onnxruntime/model.cr","line_number":1,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/model.cr#L1"},{"filename":"src/onnxruntime/sparse_tensor.cr","line_number":1,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/sparse_tensor.cr#L1"},{"filename":"src/onnxruntime/version.cr","line_number":1,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/version.cr#L1"}],"repository_name":"onnxruntime","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\""}],"class_methods":[{"html_id":"block_sparse_tensor(values,indices,dense_shape)-class-method","name":"block_sparse_tensor","doc":"Create a BlockSparse format sparse tensor","summary":"<p>Create a BlockSparse format sparse tensor</p>","abstract":false,"args":[{"name":"values","external_name":"values","restriction":""},{"name":"indices","external_name":"indices","restriction":""},{"name":"dense_shape","external_name":"dense_shape","restriction":""}],"args_string":"(values, indices, dense_shape)","args_html":"(values, indices, dense_shape)","location":{"filename":"src/onnxruntime.cr","line_number":19,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime.cr#L19"},"def":{"name":"block_sparse_tensor","args":[{"name":"values","external_name":"values","restriction":""},{"name":"indices","external_name":"indices","restriction":""},{"name":"dense_shape","external_name":"dense_shape","restriction":""}],"visibility":"Public","body":"SparseTensor.block_sparse(values, indices, dense_shape)"}},{"html_id":"coo_sparse_tensor(values,indices,dense_shape)-class-method","name":"coo_sparse_tensor","doc":"Create a COO format sparse tensor","summary":"<p>Create a COO format sparse tensor</p>","abstract":false,"args":[{"name":"values","external_name":"values","restriction":""},{"name":"indices","external_name":"indices","restriction":""},{"name":"dense_shape","external_name":"dense_shape","restriction":""}],"args_string":"(values, indices, dense_shape)","args_html":"(values, indices, dense_shape)","location":{"filename":"src/onnxruntime.cr","line_number":9,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime.cr#L9"},"def":{"name":"coo_sparse_tensor","args":[{"name":"values","external_name":"values","restriction":""},{"name":"indices","external_name":"indices","restriction":""},{"name":"dense_shape","external_name":"dense_shape","restriction":""}],"visibility":"Public","body":"SparseTensor.coo(values, indices, dense_shape)"}},{"html_id":"csr_sparse_tensor(values,inner_indices,outer_indices,dense_shape)-class-method","name":"csr_sparse_tensor","doc":"Create a CSR format sparse tensor","summary":"<p>Create a CSR format sparse tensor</p>","abstract":false,"args":[{"name":"values","external_name":"values","restriction":""},{"name":"inner_indices","external_name":"inner_indices","restriction":""},{"name":"outer_indices","external_name":"outer_indices","restriction":""},{"name":"dense_shape","external_name":"dense_shape","restriction":""}],"args_string":"(values, inner_indices, outer_indices, dense_shape)","args_html":"(values, inner_indices, outer_indices, dense_shape)","location":{"filename":"src/onnxruntime.cr","line_number":14,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime.cr#L14"},"def":{"name":"csr_sparse_tensor","args":[{"name":"values","external_name":"values","restriction":""},{"name":"inner_indices","external_name":"inner_indices","restriction":""},{"name":"outer_indices","external_name":"outer_indices","restriction":""},{"name":"dense_shape","external_name":"dense_shape","restriction":""}],"visibility":"Public","body":"SparseTensor.csr(values, inner_indices, outer_indices, dense_shape)"}}],"types":[{"html_id":"onnxruntime/OnnxRuntime/InferenceSession","path":"OnnxRuntime/InferenceSession.html","kind":"class","full_name":"OnnxRuntime::InferenceSession","name":"InferenceSession","abstract":false,"superclass":{"html_id":"onnxruntime/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"onnxruntime/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"onnxruntime/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/onnxruntime/inference_session.cr","line_number":2,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/inference_session.cr#L2"}],"repository_name":"onnxruntime","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"onnxruntime/OnnxRuntime","kind":"module","full_name":"OnnxRuntime","name":"OnnxRuntime"},"constructors":[{"html_id":"new(path_or_bytes,**session_options)-class-method","name":"new","abstract":false,"args":[{"name":"path_or_bytes","external_name":"path_or_bytes","restriction":""}],"args_string":"(path_or_bytes, **session_options)","args_html":"(path_or_bytes, **session_options)","location":{"filename":"src/onnxruntime/inference_session.cr","line_number":20,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/inference_session.cr#L20"},"def":{"name":"new","args":[{"name":"path_or_bytes","external_name":"path_or_bytes","restriction":""}],"double_splat":{"name":"session_options","external_name":"session_options","restriction":""},"visibility":"Public","body":"_ = allocate\n_.initialize(path_or_bytes, **session_options)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"allocator:Pointer(OnnxRuntime::LibOnnxRuntime::OrtAllocator)-instance-method","name":"allocator","abstract":false,"location":{"filename":"src/onnxruntime/inference_session.cr","line_number":10,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/inference_session.cr#L10"},"def":{"name":"allocator","visibility":"Public","body":"@allocator"}},{"html_id":"api-instance-method","name":"api","abstract":false,"location":{"filename":"src/onnxruntime/inference_session.cr","line_number":12,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/inference_session.cr#L12"},"def":{"name":"api","visibility":"Public","body":"(OnnxRuntime::LibOnnxRuntime.OrtGetApiBase.value.get_api.call(OnnxRuntime::LibOnnxRuntime::ORT_API_VERSION)).value"}},{"html_id":"check_status(status)-instance-method","name":"check_status","doc":"Make check_status public so it can be used by SparseTensor","summary":"<p>Make check_status public so it can be used by SparseTensor</p>","abstract":false,"args":[{"name":"status","external_name":"status","restriction":""}],"args_string":"(status)","args_html":"(status)","location":{"filename":"src/onnxruntime/inference_session.cr","line_number":556,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/inference_session.cr#L556"},"def":{"name":"check_status","args":[{"name":"status","external_name":"status","restriction":""}],"visibility":"Public","body":"if status.null?\n  return\nend\nerror_code = api.get_error_code.call(status)\nerror_message = String.new(api.get_error_message.call(status))\napi.release_status.call(status)\nraise(\"ONNXRuntime Error: #{error_message} (#{error_code})\")\n"}},{"html_id":"finalize-instance-method","name":"finalize","abstract":false,"location":{"filename":"src/onnxruntime/inference_session.cr","line_number":31,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/inference_session.cr#L31"},"def":{"name":"finalize","visibility":"Public","body":"if @session\n  api.release_session.call(@session)\nend"}},{"html_id":"inputs:Array({name:String,type:OnnxRuntime::LibOnnxRuntime::TensorElementDataType,shape:Array(Int64)})-instance-method","name":"inputs","abstract":false,"location":{"filename":"src/onnxruntime/inference_session.cr","line_number":10,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/inference_session.cr#L10"},"def":{"name":"inputs","visibility":"Public","body":"@inputs"}},{"html_id":"outputs:Array({name:String,type:OnnxRuntime::LibOnnxRuntime::TensorElementDataType,shape:Array(Int64)})-instance-method","name":"outputs","abstract":false,"location":{"filename":"src/onnxruntime/inference_session.cr","line_number":10,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/inference_session.cr#L10"},"def":{"name":"outputs","visibility":"Public","body":"@outputs"}},{"html_id":"run(input_feed,output_names=nil,**run_options)-instance-method","name":"run","abstract":false,"args":[{"name":"input_feed","external_name":"input_feed","restriction":""},{"name":"output_names","default_value":"nil","external_name":"output_names","restriction":""}],"args_string":"(input_feed, output_names = nil, **run_options)","args_html":"(input_feed, output_names = <span class=\"n\">nil</span>, **run_options)","location":{"filename":"src/onnxruntime/inference_session.cr","line_number":149,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/inference_session.cr#L149"},"def":{"name":"run","args":[{"name":"input_feed","external_name":"input_feed","restriction":""},{"name":"output_names","default_value":"nil","external_name":"output_names","restriction":""}],"double_splat":{"name":"run_options","external_name":"run_options","restriction":""},"visibility":"Public","body":"run_options_ptr = Pointer(LibOnnxRuntime::OrtRunOptions).null\nstatus = api.create_run_options.call(pointerof(run_options_ptr))\ncheck_status(status)\nif tag = run_options[\"tag\"]?\n  status = api.run_options_set_run_tag.call(run_options_ptr, tag.to_s)\n  check_status(status)\nend\nif level = run_options[\"log_severity_level\"]?\n  status = api.run_options_set_run_log_severity_level.call(run_options_ptr, level.to_i)\n  check_status(status)\nend\nif level = run_options[\"log_verbosity_level\"]?\n  status = api.run_options_set_run_log_verbosity_level.call(run_options_ptr, level.to_i)\n  check_status(status)\nend\ninput_tensors = [] of Pointer(LibOnnxRuntime::OrtValue)\ninput_names = [] of String\nshapes = run_options[\"shape\"]?.try do |__arg0|\n  __arg0.as(Hash(String, Array(Int64)))\nend\ninput_feed.each do |name, data|\n  tensor = if ((data.is_a?(SparseTensorFloat32) || data.is_a?(SparseTensorInt32)) || data.is_a?(SparseTensorInt64)) || data.is_a?(SparseTensorFloat64)\n    data.to_ort_value(self)\n  else\n    if (shapes && shapes[name]?) && data.is_a?(Array)\n      create_tensor_with_shape(data, shapes[name])\n    else\n      create_tensor(data)\n    end\n  end\n  input_tensors << tensor\n  input_names << name\nend\noutput_names = output_names || @outputs.map do |o|\n  o[:name]\nend\noutput_tensors = Array(Pointer(LibOnnxRuntime::OrtValue)).new(output_names.size, Pointer(LibOnnxRuntime::OrtValue).null)\ninput_names_ptr = input_names.map do |name|\n  ort_string(name)\nend\noutput_names_ptr = output_names.map do |name|\n  ort_string(name)\nend\nstatus = api.run.call(@session, run_options_ptr, input_names_ptr.to_unsafe, input_tensors.to_unsafe, input_tensors.size.to_u64, output_names_ptr.to_unsafe, output_names.size.to_u64, output_tensors.to_unsafe)\ncheck_status(status)\napi.release_run_options.call(run_options_ptr)\nresult = {} of String => Array(Float32) | Array(Int32) | Array(Int64) | Array(Bool) | Array(UInt8) | Array(Int8) | Array(UInt16) | Array(Int16) | Array(UInt32) | Array(UInt64) | SparseTensorFloat32 | SparseTensorInt32 | SparseTensorInt64 | SparseTensorFloat64\noutput_names.each_with_index do |name, i|\n  tensor = output_tensors[i]\n  type_info = Pointer(LibOnnxRuntime::OrtTypeInfo).null\n  status = api.get_type_info.call(tensor, pointerof(type_info))\n  check_status(status)\n  onnx_type = LibOnnxRuntime::OnnxType::TENSOR\n  status = api.get_onnx_type_from_type_info.call(type_info, pointerof(onnx_type))\n  check_status(status)\n  if onnx_type == LibOnnxRuntime::OnnxType::TENSOR\n    result[name] = extract_dense_tensor_data(tensor, type_info)\n  else\n    if onnx_type == LibOnnxRuntime::OnnxType::SPARSETENSOR\n      result[name] = extract_sparse_tensor_data(tensor)\n    else\n      raise(\"Unsupported ONNX type: #{onnx_type}\")\n    end\n  end\n  api.release_type_info.call(type_info)\n  api.release_value.call(tensor)\nend\nresult\n"}},{"html_id":"session:Pointer(OnnxRuntime::LibOnnxRuntime::OrtSession)-instance-method","name":"session","abstract":false,"location":{"filename":"src/onnxruntime/inference_session.cr","line_number":10,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/inference_session.cr#L10"},"def":{"name":"session","visibility":"Public","body":"@session"}}]},{"html_id":"onnxruntime/OnnxRuntime/Model","path":"OnnxRuntime/Model.html","kind":"class","full_name":"OnnxRuntime::Model","name":"Model","abstract":false,"superclass":{"html_id":"onnxruntime/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"onnxruntime/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"onnxruntime/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/onnxruntime/model.cr","line_number":2,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/model.cr#L2"}],"repository_name":"onnxruntime","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"onnxruntime/OnnxRuntime","kind":"module","full_name":"OnnxRuntime","name":"OnnxRuntime"},"constructors":[{"html_id":"new(path_or_bytes,**session_options)-class-method","name":"new","abstract":false,"args":[{"name":"path_or_bytes","external_name":"path_or_bytes","restriction":""}],"args_string":"(path_or_bytes, **session_options)","args_html":"(path_or_bytes, **session_options)","location":{"filename":"src/onnxruntime/model.cr","line_number":3,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/model.cr#L3"},"def":{"name":"new","args":[{"name":"path_or_bytes","external_name":"path_or_bytes","restriction":""}],"double_splat":{"name":"session_options","external_name":"session_options","restriction":""},"visibility":"Public","body":"_ = allocate\n_.initialize(path_or_bytes, **session_options)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"create_block_sparse_tensor(values:Array(T),indices,dense_shape)forallT-instance-method","name":"create_block_sparse_tensor","doc":"Create a BlockSparse format sparse tensor","summary":"<p>Create a BlockSparse format sparse tensor</p>","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(T)"},{"name":"indices","external_name":"indices","restriction":""},{"name":"dense_shape","external_name":"dense_shape","restriction":""}],"args_string":"(values : Array(T), indices, dense_shape) forall T","args_html":"(values : Array(T), indices, dense_shape) forall T","location":{"filename":"src/onnxruntime/model.cr","line_number":51,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/model.cr#L51"},"def":{"name":"create_block_sparse_tensor","args":[{"name":"values","external_name":"values","restriction":"Array(T)"},{"name":"indices","external_name":"indices","restriction":""},{"name":"dense_shape","external_name":"dense_shape","restriction":""}],"visibility":"Public","body":"SparseTensor(T).block_sparse(values, indices, dense_shape)"}},{"html_id":"create_coo_sparse_tensor(values:Array(T),indices,dense_shape)forallT-instance-method","name":"create_coo_sparse_tensor","doc":"Create a COO format sparse tensor","summary":"<p>Create a COO format sparse tensor</p>","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(T)"},{"name":"indices","external_name":"indices","restriction":""},{"name":"dense_shape","external_name":"dense_shape","restriction":""}],"args_string":"(values : Array(T), indices, dense_shape) forall T","args_html":"(values : Array(T), indices, dense_shape) forall T","location":{"filename":"src/onnxruntime/model.cr","line_number":41,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/model.cr#L41"},"def":{"name":"create_coo_sparse_tensor","args":[{"name":"values","external_name":"values","restriction":"Array(T)"},{"name":"indices","external_name":"indices","restriction":""},{"name":"dense_shape","external_name":"dense_shape","restriction":""}],"visibility":"Public","body":"SparseTensor(T).coo(values, indices, dense_shape)"}},{"html_id":"create_csr_sparse_tensor(values:Array(T),inner_indices,outer_indices,dense_shape)forallT-instance-method","name":"create_csr_sparse_tensor","doc":"Create a CSR format sparse tensor","summary":"<p>Create a CSR format sparse tensor</p>","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(T)"},{"name":"inner_indices","external_name":"inner_indices","restriction":""},{"name":"outer_indices","external_name":"outer_indices","restriction":""},{"name":"dense_shape","external_name":"dense_shape","restriction":""}],"args_string":"(values : Array(T), inner_indices, outer_indices, dense_shape) forall T","args_html":"(values : Array(T), inner_indices, outer_indices, dense_shape) forall T","location":{"filename":"src/onnxruntime/model.cr","line_number":46,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/model.cr#L46"},"def":{"name":"create_csr_sparse_tensor","args":[{"name":"values","external_name":"values","restriction":"Array(T)"},{"name":"inner_indices","external_name":"inner_indices","restriction":""},{"name":"outer_indices","external_name":"outer_indices","restriction":""},{"name":"dense_shape","external_name":"dense_shape","restriction":""}],"visibility":"Public","body":"SparseTensor(T).csr(values, inner_indices, outer_indices, dense_shape)"}},{"html_id":"inputs-instance-method","name":"inputs","abstract":false,"location":{"filename":"src/onnxruntime/model.cr","line_number":55,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/model.cr#L55"},"def":{"name":"inputs","visibility":"Public","body":"@session.inputs"}},{"html_id":"metadata-instance-method","name":"metadata","abstract":false,"location":{"filename":"src/onnxruntime/model.cr","line_number":63,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/model.cr#L63"},"def":{"name":"metadata","visibility":"Public","body":"{\"inputs\" => @session.inputs, \"outputs\" => @session.outputs}"}},{"html_id":"outputs-instance-method","name":"outputs","abstract":false,"location":{"filename":"src/onnxruntime/model.cr","line_number":59,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/model.cr#L59"},"def":{"name":"outputs","visibility":"Public","body":"@session.outputs"}},{"html_id":"predict(input_feed,output_names=nil,shape=nil,**run_options)-instance-method","name":"predict","abstract":false,"args":[{"name":"input_feed","external_name":"input_feed","restriction":""},{"name":"output_names","default_value":"nil","external_name":"output_names","restriction":""},{"name":"shape","default_value":"nil","external_name":"shape","restriction":""}],"args_string":"(input_feed, output_names = nil, shape = nil, **run_options)","args_html":"(input_feed, output_names = <span class=\"n\">nil</span>, shape = <span class=\"n\">nil</span>, **run_options)","location":{"filename":"src/onnxruntime/model.cr","line_number":7,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/model.cr#L7"},"def":{"name":"predict","args":[{"name":"input_feed","external_name":"input_feed","restriction":""},{"name":"output_names","default_value":"nil","external_name":"output_names","restriction":""},{"name":"shape","default_value":"nil","external_name":"shape","restriction":""}],"double_splat":{"name":"run_options","external_name":"run_options","restriction":""},"visibility":"Public","body":"formatted_input = format_input(input_feed)\nif shape\n  input_tensors = {} of String => Array(Float32) | Array(Int32) | Array(Int64) | Array(Bool) | Array(UInt8) | Array(Int8) | Array(UInt16) | Array(Int16) | Array(UInt32) | Array(UInt64) | SparseTensorFloat32 | SparseTensorInt32 | SparseTensorInt64 | SparseTensorFloat64\n  formatted_input.each do |name, data|\n    if shape[name]? && data.is_a?(Array)\n      input_tensors[name] = data\n    else\n      input_tensors[name] = data\n    end\n  end\n  run_options = run_options.merge({shape: shape})\n  result = @session.run(input_tensors, output_names, **run_options)\nelse\n  result = @session.run(formatted_input, output_names, **run_options)\nend\nformat_output(result)\n"}}]},{"html_id":"onnxruntime/OnnxRuntime/SparseTensor","path":"OnnxRuntime/SparseTensor.html","kind":"class","full_name":"OnnxRuntime::SparseTensor(T)","name":"SparseTensor","abstract":false,"superclass":{"html_id":"onnxruntime/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"onnxruntime/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"onnxruntime/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/onnxruntime/sparse_tensor.cr","line_number":9,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/sparse_tensor.cr#L9"}],"repository_name":"onnxruntime","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"onnxruntime/OnnxRuntime","kind":"module","full_name":"OnnxRuntime","name":"OnnxRuntime"},"doc":"SparseTensor class provides high-level API for working with sparse tensors in ONNX Runtime.","summary":"<p>SparseTensor class provides high-level API for working with sparse tensors in ONNX Runtime.</p>","class_methods":[{"html_id":"block_sparse(values:Array(T),indices:Array,dense_shape:Array(Int64))forallT-class-method","name":"block_sparse","doc":"Creates a BlockSparse format sparse tensor.\n\n* `values` - The non-zero values in the sparse tensor\n* `indices` - The block indices\n* `dense_shape` - The shape of the dense tensor this sparse tensor represents","summary":"<p>Creates a BlockSparse format sparse tensor.</p>","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(T)"},{"name":"indices","external_name":"indices","restriction":"Array"},{"name":"dense_shape","external_name":"dense_shape","restriction":"Array(Int64)"}],"args_string":"(values : Array(T), indices : Array, dense_shape : Array(Int64)) forall T","args_html":"(values : Array(T), indices : Array, dense_shape : Array(Int64)) forall T","location":{"filename":"src/onnxruntime/sparse_tensor.cr","line_number":61,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/sparse_tensor.cr#L61"},"def":{"name":"block_sparse","args":[{"name":"values","external_name":"values","restriction":"Array(T)"},{"name":"indices","external_name":"indices","restriction":"Array"},{"name":"dense_shape","external_name":"dense_shape","restriction":"Array(Int64)"}],"visibility":"Public","body":"indices_hash = {} of Symbol => Array(Int32) | Array(Int64)\nindices_hash[:block_indices] = indices.map(&.to_i32)\nnew(LibOnnxRuntime::SparseFormat::BLOCK_SPARSE, values, indices_hash, dense_shape)\n"}},{"html_id":"coo(values:Array(T),indices:Array,dense_shape:Array(Int64))forallT-class-method","name":"coo","doc":"Creates a COO format sparse tensor.\n\n* `values` - The non-zero values in the sparse tensor\n* `indices` - The indices data for the sparse tensor (2D array where each row is a coordinate)\n* `dense_shape` - The shape of the dense tensor this sparse tensor represents","summary":"<p>Creates a COO format sparse tensor.</p>","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(T)"},{"name":"indices","external_name":"indices","restriction":"Array"},{"name":"dense_shape","external_name":"dense_shape","restriction":"Array(Int64)"}],"args_string":"(values : Array(T), indices : Array, dense_shape : Array(Int64)) forall T","args_html":"(values : Array(T), indices : Array, dense_shape : Array(Int64)) forall T","location":{"filename":"src/onnxruntime/sparse_tensor.cr","line_number":26,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/sparse_tensor.cr#L26"},"def":{"name":"coo","args":[{"name":"values","external_name":"values","restriction":"Array(T)"},{"name":"indices","external_name":"indices","restriction":"Array"},{"name":"dense_shape","external_name":"dense_shape","restriction":"Array(Int64)"}],"visibility":"Public","body":"indices_hash = {} of Symbol => Array(Int32) | Array(Int64)\nif indices.first.is_a?(Int32)\n  indices_hash[:coo_indices] = indices.flatten.as(Array(Int32))\nelse\n  indices_hash[:coo_indices] = indices.flatten.map(&.to_i64)\nend\nnew(LibOnnxRuntime::SparseFormat::COO, values, indices_hash, dense_shape)\n"}},{"html_id":"csr(values:Array(T),inner_indices:Array,outer_indices:Array,dense_shape:Array(Int64))forallT-class-method","name":"csr","doc":"Creates a CSR format sparse tensor.\n\n* `values` - The non-zero values in the sparse tensor\n* `inner_indices` - The column indices for each non-zero value\n* `outer_indices` - The row pointers indicating where each row starts in the values array\n* `dense_shape` - The shape of the dense tensor this sparse tensor represents","summary":"<p>Creates a CSR format sparse tensor.</p>","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(T)"},{"name":"inner_indices","external_name":"inner_indices","restriction":"Array"},{"name":"outer_indices","external_name":"outer_indices","restriction":"Array"},{"name":"dense_shape","external_name":"dense_shape","restriction":"Array(Int64)"}],"args_string":"(values : Array(T), inner_indices : Array, outer_indices : Array, dense_shape : Array(Int64)) forall T","args_html":"(values : Array(T), inner_indices : Array, outer_indices : Array, dense_shape : Array(Int64)) forall T","location":{"filename":"src/onnxruntime/sparse_tensor.cr","line_number":47,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/sparse_tensor.cr#L47"},"def":{"name":"csr","args":[{"name":"values","external_name":"values","restriction":"Array(T)"},{"name":"inner_indices","external_name":"inner_indices","restriction":"Array"},{"name":"outer_indices","external_name":"outer_indices","restriction":"Array"},{"name":"dense_shape","external_name":"dense_shape","restriction":"Array(Int64)"}],"visibility":"Public","body":"indices_hash = {} of Symbol => Array(Int32) | Array(Int64)\nindices_hash[:inner_indices] = inner_indices.map(&.to_i64)\nindices_hash[:outer_indices] = outer_indices.map(&.to_i64)\nnew(LibOnnxRuntime::SparseFormat::CSRC, values, indices_hash, dense_shape)\n"}}],"constructors":[{"html_id":"new(format:LibOnnxRuntime::SparseFormat,values:Array(T),indices:Hash(Symbol,Array(Int32)|Array(Int64)),dense_shape:Array(Int64))-class-method","name":"new","doc":"Creates a new SparseTensor instance.\n\n* `format` - The sparse tensor format (COO, CSR, or BLOCK_SPARSE)\n* `values` - The non-zero values in the sparse tensor\n* `indices` - The indices data for the sparse tensor (format-specific)\n* `dense_shape` - The shape of the dense tensor this sparse tensor represents","summary":"<p>Creates a new SparseTensor instance.</p>","abstract":false,"args":[{"name":"format","external_name":"format","restriction":"LibOnnxRuntime::SparseFormat"},{"name":"values","external_name":"values","restriction":"Array(T)"},{"name":"indices","external_name":"indices","restriction":"Hash(Symbol, Array(Int32) | Array(Int64))"},{"name":"dense_shape","external_name":"dense_shape","restriction":"Array(Int64)"}],"args_string":"(format : LibOnnxRuntime::SparseFormat, values : Array(T), indices : Hash(Symbol, Array(Int32) | Array(Int64)), dense_shape : Array(Int64))","args_html":"(format : LibOnnxRuntime::SparseFormat, values : Array(T), indices : Hash(Symbol, Array(Int32) | Array(Int64)), dense_shape : Array(Int64))","location":{"filename":"src/onnxruntime/sparse_tensor.cr","line_number":18,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/sparse_tensor.cr#L18"},"def":{"name":"new","args":[{"name":"format","external_name":"format","restriction":"LibOnnxRuntime::SparseFormat"},{"name":"values","external_name":"values","restriction":"Array(T)"},{"name":"indices","external_name":"indices","restriction":"Hash(Symbol, Array(Int32) | Array(Int64))"},{"name":"dense_shape","external_name":"dense_shape","restriction":"Array(Int64)"}],"visibility":"Public","body":"_ = SparseTensor(T).allocate\n_.initialize(format, values, indices, dense_shape)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"dense_shape-instance-method","name":"dense_shape","abstract":false,"location":{"filename":"src/onnxruntime/sparse_tensor.cr","line_number":10,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/sparse_tensor.cr#L10"},"def":{"name":"dense_shape","visibility":"Public","body":"@dense_shape"}},{"html_id":"format-instance-method","name":"format","abstract":false,"location":{"filename":"src/onnxruntime/sparse_tensor.cr","line_number":10,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/sparse_tensor.cr#L10"},"def":{"name":"format","visibility":"Public","body":"@format"}},{"html_id":"indices-instance-method","name":"indices","abstract":false,"location":{"filename":"src/onnxruntime/sparse_tensor.cr","line_number":10,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/sparse_tensor.cr#L10"},"def":{"name":"indices","visibility":"Public","body":"@indices"}},{"html_id":"to_ort_value(session)-instance-method","name":"to_ort_value","doc":"Converts the sparse tensor to an OrtValue that can be used with the ONNX Runtime API.\n\n* `session` - The InferenceSession instance to use for creating the OrtValue","summary":"<p>Converts the sparse tensor to an OrtValue that can be used with the ONNX Runtime API.</p>","abstract":false,"args":[{"name":"session","external_name":"session","restriction":""}],"args_string":"(session)","args_html":"(session)","location":{"filename":"src/onnxruntime/sparse_tensor.cr","line_number":72,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/sparse_tensor.cr#L72"},"def":{"name":"to_ort_value","args":[{"name":"session","external_name":"session","restriction":""}],"visibility":"Public","body":"api = session.api\nallocator = session.allocator\ntensor = Pointer(LibOnnxRuntime::OrtValue).null\nstatus = api.create_sparse_tensor_as_ort_value.call(allocator, @dense_shape.to_unsafe, @dense_shape.size.to_u64, element_data_type, pointerof(tensor))\nsession.check_status(status)\nmemory_info = Pointer(LibOnnxRuntime::OrtMemoryInfo).null\nstatus = api.create_cpu_memory_info.call(LibOnnxRuntime::AllocatorType::DEVICE, LibOnnxRuntime::MemType::CPU, pointerof(memory_info))\nsession.check_status(status)\ncase @format\nwhen LibOnnxRuntime::SparseFormat::COO\n  fill_coo_tensor(api, tensor, memory_info, session)\nwhen LibOnnxRuntime::SparseFormat::CSRC\n  fill_csr_tensor(api, tensor, memory_info, session)\nwhen LibOnnxRuntime::SparseFormat::BLOCK_SPARSE\n  fill_block_sparse_tensor(api, tensor, memory_info, session)\nelse\n  raise(\"Unsupported sparse format: #{@format}\")\nend\napi.release_memory_info.call(memory_info)\ntensor\n"}},{"html_id":"values-instance-method","name":"values","abstract":false,"location":{"filename":"src/onnxruntime/sparse_tensor.cr","line_number":10,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/sparse_tensor.cr#L10"},"def":{"name":"values","visibility":"Public","body":"@values"}}]},{"html_id":"onnxruntime/OnnxRuntime/SparseTensorFloat32","path":"OnnxRuntime/SparseTensorFloat32.html","kind":"alias","full_name":"OnnxRuntime::SparseTensorFloat32","name":"SparseTensorFloat32","abstract":false,"locations":[{"filename":"src/onnxruntime/sparse_tensor.cr","line_number":3,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/sparse_tensor.cr#L3"}],"repository_name":"onnxruntime","program":false,"enum":false,"alias":true,"aliased":"OnnxRuntime::SparseTensor(Float32)","aliased_html":"<a href=\"../OnnxRuntime/SparseTensor.html\">OnnxRuntime::SparseTensor(Float32)</a>","const":false,"namespace":{"html_id":"onnxruntime/OnnxRuntime","kind":"module","full_name":"OnnxRuntime","name":"OnnxRuntime"},"doc":"Type aliases for common SparseTensor types","summary":"<p>Type aliases for common SparseTensor types</p>"},{"html_id":"onnxruntime/OnnxRuntime/SparseTensorFloat64","path":"OnnxRuntime/SparseTensorFloat64.html","kind":"alias","full_name":"OnnxRuntime::SparseTensorFloat64","name":"SparseTensorFloat64","abstract":false,"locations":[{"filename":"src/onnxruntime/sparse_tensor.cr","line_number":6,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/sparse_tensor.cr#L6"}],"repository_name":"onnxruntime","program":false,"enum":false,"alias":true,"aliased":"OnnxRuntime::SparseTensor(Float64)","aliased_html":"<a href=\"../OnnxRuntime/SparseTensor.html\">OnnxRuntime::SparseTensor(Float64)</a>","const":false,"namespace":{"html_id":"onnxruntime/OnnxRuntime","kind":"module","full_name":"OnnxRuntime","name":"OnnxRuntime"}},{"html_id":"onnxruntime/OnnxRuntime/SparseTensorInt32","path":"OnnxRuntime/SparseTensorInt32.html","kind":"alias","full_name":"OnnxRuntime::SparseTensorInt32","name":"SparseTensorInt32","abstract":false,"locations":[{"filename":"src/onnxruntime/sparse_tensor.cr","line_number":4,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/sparse_tensor.cr#L4"}],"repository_name":"onnxruntime","program":false,"enum":false,"alias":true,"aliased":"OnnxRuntime::SparseTensor(Int32)","aliased_html":"<a href=\"../OnnxRuntime/SparseTensor.html\">OnnxRuntime::SparseTensor(Int32)</a>","const":false,"namespace":{"html_id":"onnxruntime/OnnxRuntime","kind":"module","full_name":"OnnxRuntime","name":"OnnxRuntime"}},{"html_id":"onnxruntime/OnnxRuntime/SparseTensorInt64","path":"OnnxRuntime/SparseTensorInt64.html","kind":"alias","full_name":"OnnxRuntime::SparseTensorInt64","name":"SparseTensorInt64","abstract":false,"locations":[{"filename":"src/onnxruntime/sparse_tensor.cr","line_number":5,"url":"https://github.com/kojix2/onnxruntime.cr/blob/e4b3061df16128f8b2c6383a0c91fd0e03ef7adb/src/onnxruntime/sparse_tensor.cr#L5"}],"repository_name":"onnxruntime","program":false,"enum":false,"alias":true,"aliased":"OnnxRuntime::SparseTensor(Int64)","aliased_html":"<a href=\"../OnnxRuntime/SparseTensor.html\">OnnxRuntime::SparseTensor(Int64)</a>","const":false,"namespace":{"html_id":"onnxruntime/OnnxRuntime","kind":"module","full_name":"OnnxRuntime","name":"OnnxRuntime"}}]}]}})